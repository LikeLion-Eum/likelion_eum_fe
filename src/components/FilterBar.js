import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
export default function FilterBar({ onChange, regions = ["서울", "부산", "대구", "대전", "광주", "인천", "울산", "세종", "경기", "강원", "충북", "충남", "전북", "전남", "경북", "경남", "제주"], gus = [], hasExp, hasFacility, sortOptions = [{ value: "latest", label: "최신순" }, { value: "popular", label: "인기순" }], initial }) {
    const [q, setQ] = useState(initial?.q ?? "");
    const [si, setSi] = useState(initial?.regionSi ?? "");
    const [gu, setGu] = useState(initial?.regionGu ?? "");
    const [exp, setExp] = useState(initial?.exp ?? "");
    const [sort, setSort] = useState(initial?.sort ?? sortOptions[0].value);
    const [facility, setFacility] = useState(initial?.facility ?? "");
    const apply = () => onChange({ q, regionSi: si, regionGu: gu, exp, sort, facility });
    return (_jsxs("div", { className: "flex flex-wrap items-center gap-2 rounded-xl border border-[var(--c-card-border)] bg-white/70 p-3", children: [_jsx("input", { value: q, onChange: e => setQ(e.target.value), placeholder: "\uAC80\uC0C9\uC5B4", className: "h-10 w-60 rounded-md border border-[var(--c-card-border)] px-3 text-sm" }), _jsxs("select", { value: si, onChange: e => { setSi(e.target.value); setGu(""); }, className: "h-10 rounded-md border px-2 text-sm", children: [_jsx("option", { value: "", children: "\uC804\uCCB4 \uC2DC/\uB3C4" }), regions.map(r => _jsx("option", { value: r, children: r }, r))] }), _jsxs("select", { value: gu, onChange: e => setGu(e.target.value), className: "h-10 rounded-md border px-2 text-sm", children: [_jsx("option", { value: "", children: "\uC804\uCCB4 \uAD6C/\uAD70" }), gus.map(g => _jsx("option", { value: g, children: g }, g))] }), hasExp && (_jsxs("div", { className: "ml-2 flex items-center gap-2 text-sm", children: [_jsxs("label", { className: "flex items-center gap-1", children: [_jsx("input", { type: "radio", name: "exp", checked: exp === "", onChange: () => setExp("") }), " \uC804\uCCB4"] }), _jsxs("label", { className: "flex items-center gap-1", children: [_jsx("input", { type: "radio", name: "exp", checked: exp === "신입", onChange: () => setExp("신입") }), " \uC2E0\uC785"] }), _jsxs("label", { className: "flex items-center gap-1", children: [_jsx("input", { type: "radio", name: "exp", checked: exp === "경력", onChange: () => setExp("경력") }), " \uACBD\uB825"] })] })), hasFacility && (_jsxs("select", { value: facility, onChange: e => setFacility(e.target.value), className: "h-10 rounded-md border px-2 text-sm", children: [_jsx("option", { value: "", children: "\uC804\uCCB4 \uD3B8\uC758\uC2DC\uC124" }), _jsx("option", { value: "meeting", children: "\uD68C\uC758\uC2E4" }), _jsx("option", { value: "parking", children: "\uC8FC\uCC28" }), _jsx("option", { value: "24h", children: "24\uC2DC\uAC04" }), _jsx("option", { value: "coffee", children: "\uCE74\uD398/\uB77C\uC6B4\uC9C0" })] })), _jsx("select", { value: sort, onChange: e => setSort(e.target.value), className: "h-10 rounded-md border px-2 text-sm", children: sortOptions.map(op => _jsx("option", { value: op.value, children: op.label }, op.value)) }), _jsx("button", { onClick: apply, className: "btn h-10", children: "\uD544\uD130 \uC801\uC6A9" }), _jsx("button", { onClick: () => { setQ(""); setSi(""); setGu(""); setExp(""); setFacility(""); setSort(sortOptions[0].value); onChange({}); }, className: "btn btn-outline h-10", children: "\uCD08\uAE30\uD654" })] }));
}
